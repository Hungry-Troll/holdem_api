plugins {
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java'
	id 'idea'
}

group = 'net.lodgames.api'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	mapstructVersion = "1.5.5.Final"
	flywayVersion = "10.15.0"
	lombokVersion = "1.18.32"
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.maven.apache.org/maven2' }
	maven { url 'https://repo.gradle.org/gradle/libs-releases-local' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-data-redis"
	implementation 'org.redisson:redisson-spring-boot-starter:3.38.0'
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'javax.xml.bind:jaxb-api:2.2.4'
	implementation 'org.apache.commons:commons-lang3:3.17.0'
	implementation 'org.apache.commons:commons-text:1.13.0'
	implementation "org.flywaydb:flyway-core:${flywayVersion}"  // flyway
	implementation "org.flywaydb:flyway-mysql:${flywayVersion}" // flyway - mysql
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.slf4j:slf4j-api:2.0.7'
	implementation 'org.slf4j:jcl-over-slf4j:2.0.7'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.33.1'
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api' 	// java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api' 	// java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' 			// mapstruct-processor 의존성에 아래 Lombok 지원 플러그인을 추가
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "org.projectlombok:lombok:${lombokVersion}"					// lombok for test
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"				// lombok for test
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}" // mapstrurct for test
	testAnnotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'		// mapstrurct for test
	testImplementation 'junit:junit:4.13.1'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

task unpackJar(type: Copy) {
	def unpackDir = "$buildDir/dependency"
	def jarFile = "$buildDir/libs/${rootProject.name}-${version}.jar"
	delete unpackDir
	from zipTree(jarFile)
	into unpackDir
}

build {
	finalizedBy unpackJar
}

test {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true' // 생성된 매퍼 클래스의 @Generated 주석에 시간 스탬프가 생성되지 않음
	]
}
